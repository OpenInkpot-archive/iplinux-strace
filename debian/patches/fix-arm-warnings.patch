Index: strace/signal.c
===================================================================
--- strace.orig/signal.c	2009-03-14 02:17:27.000000000 +0600
+++ strace/signal.c	2009-03-14 02:17:45.000000000 +0600
@@ -1241,7 +1241,7 @@
 	if (entering(tcp)) {
 		tcp->u_arg[0] = 0;
 
-		if (ptrace(PTRACE_GETREGS, tcp->pid, NULL, (void *)&regs) == -1)
+		if (ptrace(PTRACE_GETREGS, tcp->pid, NULL, (unsigned long)&regs) == -1)
 			return 0;
 
 		if (umove(tcp, regs.ARM_sp, &sc) < 0)
Index: strace/syscall.c
===================================================================
--- strace.orig/syscall.c	2009-03-14 02:17:31.000000000 +0600
+++ strace/syscall.c	2009-03-14 02:17:45.000000000 +0600
@@ -582,7 +582,7 @@
 };
 #endif /* FREEBSD */
 
-#if !(defined(LINUX) && ( defined(ALPHA) || defined(MIPS) ))
+#if !(defined(LINUX) && ( defined(ALPHA) || defined(MIPS) || defined(__ARM_EABI__) ))
 
 static void
 decode_subcall(tcp, subcall, nsubcalls, style)
@@ -998,7 +998,7 @@
 	/*
 	 * Read complete register set in one go.
 	 */
-	if (ptrace(PTRACE_GETREGS, pid, NULL, (void *)&regs) == -1)
+	if (ptrace(PTRACE_GETREGS, pid, NULL, (unsigned long)&regs) == -1)
 		return -1;
 
 	/*
@@ -1026,7 +1026,7 @@
 			 * Get the ARM-mode system call number
 			 */
 			errno = 0;
-			scno = ptrace(PTRACE_PEEKTEXT, pid, (void *)(regs.ARM_pc - 4), NULL);
+			scno = ptrace(PTRACE_PEEKTEXT, pid, (void *)(regs.ARM_pc - 4), 0);
 			if (errno)
 				return -1;
 
@@ -1334,7 +1334,9 @@
 struct tcb *tcp;
 {
 #ifndef USE_PROCFS
+#ifndef ARM
 	int pid = tcp->pid;
+#endif
 #else /* USE_PROCFS */
 	int scno = known_scno(tcp);
 
@@ -1929,9 +1931,9 @@
 syscall_enter(tcp)
 struct tcb *tcp;
 {
-#ifndef USE_PROCFS
+#if !defined(USE_PROCFS) && !defined(ARM)
 	int pid = tcp->pid;
-#endif /* !USE_PROCFS */
+#endif /* !USE_PROCFS && !ARM */
 #ifdef LINUX
 #if defined(S390) || defined(S390X)
 	{
